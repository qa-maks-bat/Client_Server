QA Course by Vadim Ksendzov 
Group_30_QA

CLIENT_SERVER HOMEWORK

Name: Maksim Batrakou
Telegram: @maks_tbat 	 
Location: Minsk, Belarus
Invironment: Windows 10, Notepad++

1. Прочитать про клиент-серверную архитектуру:
    * Клиент - это та программма, с которой работает пользователь (браузер, desktop-риложение) на персональном компьютере, смартфоне или другом девайсе.
    * Сервер - компьютер, на котором хранится само приложение, весь код, вся логика, все дополнительные материалы и справочники.
    * Клиент-серверная архитектура (КСА) может быть одно-, двух- и трёхуровневой, а также многоуровневой:
        + одноуровневая КСА (1-Tier): все прикладные программы рассредоточены по рабочим станциям, которые обращаются к общему серверу баз данных или общему файловому серверу. Никаких прикладных программ сервер при этом не исполняет, только предоставляет данные, двух- и трёхуровневой, а также многоуровневой;
        + двухуровневая КСА (2-Tier): прикладные программы сосредоточены на сервере приложений (Application Server), например, сервер 1С или сервер CRM, а в рабочих станциях находятся программы-клиенты, которые предоставляют для пользователей интерфейс для работы с приложениями на сервере:
            - fat client thin server (толстый клиент, тонкий сервер) - это, когда общие данные хранятся на сервере, а логика их обработки и бизнес данные хранятся на клиентской машине;
            - thin client fat server (тонкий клиент, толстый сервер) - это, когда не только данные, но и логика их обработки и бизнес-данные хранятся на сервере (прообраз облачных вычислений (Cloud Computing);
        + трёхуровневая КСА (3-Tier): сервер баз данных, файловый сервер и другие представляют собой отдельный уровень, результаты работы которого использует сервер приложений. Логика данных и бизнес-логика находятся на сервере приложений. Все обращения клиентов к базе данных происходят через промежуточное программное обеспечение (middleware), которое находится на сервере приложений;
        + многоуровневая КСА (N-Tier): несколько серверов приложений используют результаты работы друг друга, а также данные различных серверов баз данных, файловых серверов и других видов серверов.
        
2. Что ткое HTTP и HTTPS

3. HTTP методы

4. HTTP статус коды сервера

5. Что такое ядро браузера

6. Какие браузеры какие ядра используют

7. Что такое API

8. Что такое ендпоинты

9. URL (URI, URL, URN)

10. Идемпотентные HTTP методы

11. Безопасные HTTP методы

12. Иденфикация, Аутентификация, Авторизация

13. Что такое IP

14. Что такое октаты в DNS

15. Что такое порт, сколько портов у Linux сервера

16. Уровни OSI

17. Хедеры http запросов
